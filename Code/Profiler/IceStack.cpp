///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Contains simple stacks.
 *	\file		IceStack.cpp
 *	\author		Pierre Terdiman
 *	\date		February, 5, 2000
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	A standard LIFO stack.
 *
 *	\class		LIFOStack
 *	\author		Pierre Terdiman
 *	\version	1.0
 *	\date		08.15.98
*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	A standard FIFO stack.
 *
 *	\class		FIFOStack
 *	\author		Pierre Terdiman
 *	\version	1.0
 *	\date		08.15.98
*/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Precompiled Header
#include "Stdafx.h"

using namespace IceCore;

bool LIFOStack::Pop(udword& entry)
{
	udword NbEntries = GetNbEntries();						// Get current number of entries
	if(!NbEntries)	return false;							// Can be null when no value has been pushed. This is an invalid pop call.
	entry = GetEntry(NbEntries-1);							// Get newest entry...
	DeleteLastEntry();										// ...and delete it
	return true;
}

bool FIFOStack::Pop(udword& entry)
{
	udword NbEntries = GetNbEntries();						// Get current number of entries
	if(!NbEntries)	return false;							// Can be null when no value has been pushed. This is an invalid pop call.
	entry = GetEntry(mCurIndex++);							// Get oldest entry, move to next one
	if(mCurIndex==NbEntries)	{ Reset(); mCurIndex=0; }	// All values have been poped
	return true;
}

